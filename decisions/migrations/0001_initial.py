# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-06-22 11:10
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iri', models.CharField(help_text='IRI for this action', max_length=255)),
                ('title', models.CharField(help_text='Descriptive compact title for this case', max_length=255)),
                ('ordering', models.IntegerField(help_text='Ordering of this action within a meeting')),
                ('article_number', models.CharField(help_text='The article number given to this action after decision', max_length=255, null=True)),
                ('proposal_identifier', models.CharField(help_text='Identifier for this action used inside the meeting minutes. The format will vary between cities.', max_length=255)),
                ('resolution', models.CharField(blank=True, help_text='Resolution taken in this action (like tabled, decided...)', max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iri', models.CharField(help_text='IRI for this attachment', max_length=255)),
                ('file', models.CharField(help_text='FIXME: i should refer to a file', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(help_text='Role of the person in the event (chairman, secretary...', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iri', models.CharField(help_text='IRI for this case', max_length=255)),
                ('title', models.CharField(help_text='A high level matter to be decided', max_length=255)),
                ('description', models.CharField(blank=True, help_text='A descriptive compact title for the case', max_length=255)),
                ('summary', models.CharField(blank=True, help_text='Summary of this case. Typically a few sentences.', max_length=255)),
                ('category', models.CharField(blank=True, help_text='Category this case belongs to ("tehtäväluokka")', max_length=255)),
                ('creation_date', models.DateField(blank=True, null=True)),
                ('public', models.BooleanField(default=True)),
                ('attachments', models.ManyToManyField(to='decisions.Attachment')),
            ],
        ),
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iri', models.CharField(help_text='IRI for this content', max_length=255)),
                ('ordering', models.IntegerField(help_text='Ordering of this content within the larger context (like action)')),
                ('title', models.CharField(help_text='Title of this content', max_length=255)),
                ('type', models.CharField(help_text='Type of this content (options include: decision, proposal, proceedings...)', max_length=255)),
                ('hypertext', models.CharField(help_text='Content formatted with pseudo-HTML. Only a very restricted set of tags is allowed. These are: first and second level headings (P+H1+H2) and table (more may be added, but start from a minimal set)', max_length=255)),
                ('action', models.ForeignKey(help_text='Action that this content describes', on_delete=django.db.models.deletion.CASCADE, to='decisions.Action')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="The event's name", max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('abstract', models.CharField(help_text='A one-line description of an organization', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="A person's preferred full name", max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(help_text="Post's label", max_length=255)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='decisions.Organization')),
            ],
        ),
        migrations.CreateModel(
            name='VoteCount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='VoteEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legislative_session', models.ForeignKey(help_text='The meeting (event) where this vote took place', on_delete=django.db.models.deletion.CASCADE, to='decisions.Event')),
                ('vote_count', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='decisions.VoteCount')),
            ],
        ),
        migrations.AddField(
            model_name='membership',
            name='organization',
            field=models.ForeignKey(help_text='The organization in which the person or organization is a member', on_delete=django.db.models.deletion.CASCADE, to='decisions.Organization'),
        ),
        migrations.AddField(
            model_name='membership',
            name='person',
            field=models.ForeignKey(help_text='Person who has membership in organization', on_delete=django.db.models.deletion.CASCADE, to='decisions.Person'),
        ),
        migrations.AddField(
            model_name='membership',
            name='post',
            field=models.ForeignKey(help_text='The post held by the member through this membership', on_delete=django.db.models.deletion.CASCADE, to='decisions.Post'),
        ),
        migrations.AddField(
            model_name='event',
            name='attendees',
            field=models.ManyToManyField(help_text='People attending this event', through='decisions.Attendance', to='decisions.Person'),
        ),
        migrations.AddField(
            model_name='event',
            name='organization',
            field=models.ForeignKey(help_text='The organization organizing the event', on_delete=django.db.models.deletion.CASCADE, to='decisions.Organization'),
        ),
        migrations.AddField(
            model_name='case',
            name='originator',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='decisions.Person'),
        ),
        migrations.AddField(
            model_name='case',
            name='related_case',
            field=models.ManyToManyField(help_text='Other related cases', related_name='_case_related_case_+', to='decisions.Case'),
        ),
        migrations.AddField(
            model_name='attendance',
            name='attendee',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='decisions.Person'),
        ),
        migrations.AddField(
            model_name='attendance',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='decisions.Event'),
        ),
        migrations.AddField(
            model_name='action',
            name='case',
            field=models.ForeignKey(help_text='Case this action affects', on_delete=django.db.models.deletion.CASCADE, to='decisions.Case'),
        ),
        migrations.AddField(
            model_name='action',
            name='delegation',
            field=models.ForeignKey(blank=True, help_text='If this decision was delegated, this field will be filled and refers to the post that made the decision', null=True, on_delete=django.db.models.deletion.CASCADE, to='decisions.Post'),
        ),
        migrations.AddField(
            model_name='action',
            name='event',
            field=models.ForeignKey(help_text='Event (if any) where this action took place', null=True, on_delete=django.db.models.deletion.CASCADE, to='decisions.Event'),
        ),
        migrations.AddField(
            model_name='action',
            name='responsible_party',
            field=models.ForeignKey(help_text='The city organization responsible for this decision. If decision is delegated, this is the organization that delegated the authority.', on_delete=django.db.models.deletion.CASCADE, to='decisions.Organization'),
        ),
    ]
